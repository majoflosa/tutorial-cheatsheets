Composer Basics

= = = = = = = = = = = = = = = = = = = = = = = = = =
Install composer:
= = = = = = = = = = = = = = = = = = = = = = = = = =
# copy setup file
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"

# verify that setup file was copied correctly
php -r "if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"

# run the setup file
php composer-setup.php

# delete the setup file
php -r "unlink('composer-setup.php');"

# to make installation global:
[sudo] mv composer.phar /usr/local/bin/composer



= = = = = = = = = = = = = = = = = = = = = = = = = =
# initiate project
composer init



= = = = = = = = = = = = = = = = = = = = = = = = = =
# the PHP package repository: packagist.org

# install a package
composer require [package name]

# Example 
composer require league/color-extractor

# Example, using specific version or version range 
composer require league/color-extractor:0.3.*

# Example, install package as development dependency
composer require --dev [package name]

# when a package is installed
# - dependency is registered in composer.json file under the "require" object
# - package is downloaded into a "vendor" folder
# - autoload file is generated or modified to automatically load new dependency into project
# - autoload file should be included into project file
<?php require '/path-to-root/vendor/autoload.php'; ?>

# see installed packages
composer show

# install packages in composer.json
composer install


= = = = = = = = = = = = = = = = = = = = = = = = = =
Managing versions
= = = = = = = = = = = = = = = = = = = = = = = = = =
# show updatable packages
composer outdated

# update all
composer update

# update a package
composer update [package name]


= = = = = = = = = = = = = = = = = = = = = = = = = =
Other Useful commands
= = = = = = = = = = = = = = = = = = = = = = = = = =
# remove package from project
composer remove

# see full list of commands
composer




